#include <stdio.h>
#include <stdlib.h>
#include <locale.h> 

struct Node {
    int data;
    struct Node* next;
};

struct Queue {
    struct Node* front;
    struct Node* rear;
};

struct Queue* createQueue() {
    struct Queue* queue = (struct Queue*)malloc(sizeof(struct Queue));
    if (!queue) {
        perror("Erro ao criar a fila");
        exit(1);
    }
    queue->front = queue->rear = NULL;
    return queue;
}

void enqueue(struct Queue* queue, int data) {
    struct Node* newNode = (struct Node*)malloc(sizeof(struct Node));
    if (!newNode) {
        perror("Erro ao inserir na fila");
        exit(1);
    }
    newNode->data = data;
    newNode->next = NULL;
    
    if (queue->rear == NULL) {
        queue->front = queue->rear = newNode;
    } else {
        queue->rear->next = newNode;
        queue->rear = newNode;
    }
}

int dequeue(struct Queue* queue) {
    if (queue->front == NULL) {
        printf("A fila estÃ¡ vazia\n");
        exit(1);
    }

    struct Node* temp = queue->front;
    int data = temp->data;
    queue->front = temp->next;

    if (queue->front == NULL) {
        queue->rear = NULL;
    }

    free(temp);
    return data;
}

void displayQueue(struct Queue* queue) {
    if (queue->front == NULL) {
        printf("A fila estag¡ vazia\n");
        return;
    }

    struct Node* current = queue->front;
    while (current != NULL) {
        printf("%d ", current->data);
        current = current->next;
    }
    printf("\n");
}

int main() {
    
    setlocale(LC_ALL, "portuguese");

    struct Queue* queue = createQueue();

    enqueue(queue, 1);
    enqueue(queue, 2);
    enqueue(queue, 3);

    printf("Fila: ");
    displayQueue(queue);

    int removed = dequeue(queue);
    printf("Elemento removido: %d\n", removed);

    printf("Fila após remoção: ");
    displayQueue(queue);

    return 0;
}
